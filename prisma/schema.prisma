generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

//======//AGENDA//======//

model Contato {
  id         String      @id @default(uuid())
  nome       String
  categorias Categoria[]
  telefone   String      @unique

  criadoEm     DateTime  @default(now()) @map("criado_em")
  atualizadoEm DateTime? @updatedAt @map("atualizado_em")

  usuario Usuario?

  @@map("contato")
}

model Usuario {
  contato Contato @relation(fields: [contatoId], references: [id], onDelete: Restrict)

  contatoId String  @id @map("contato_id")
  email     String  @unique
  username  String? @unique
  senha     String
  ativo     Boolean @default(true)

  criadoEm     DateTime  @default(now()) @map("criado_em")
  atualizadoEm DateTime? @updatedAt @map("atualizado_em")

  @@map("usuario")
}

enum Categoria {
  dentista
  fornecedor
  cliente
  colaborador
  entregador
  gerente
  admin

  @@map("categoria")
}

//======//OPERACIONAL//======//

//==estoque==//

model Produto {
  tipoProduto TipoProduto @relation(fields: [tipo], references: [nome], onDelete: Restrict)

  id        String  @id @default(uuid())
  nome      String
  marca     String?
  descricao String?
  ativo     Boolean @default(true)
  tipo      String

  criadoEm     DateTime  @default(now()) @map("criado_em")
  atualizadoEm DateTime? @updatedAt @map("atualizado_em")

  historicoValores       ValorProduto[]
  itemServicos           ItemServico[]
  EtapaFabricacaoProduto EtapaFabricacaoProduto[]

  @@map("produto")
}

model EtapaFabricacaoProduto {
  produto         Produto         @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  etapaFabricacao EtapaFabricacao @relation(fields: [etapa], references: [nome])

  id        String @id @default(uuid())
  etapa     String
  ordem     Int
  produtoId String

  ItemServico ItemServico[]
  @@unique([ordem, produtoId])
  @@unique([etapa, produtoId])
}

model TipoProduto {
  id        String  @id @default(uuid())
  nome      String  @unique
  descricao String?

  Produto Produto[]

  @@map("tipo_produto")
}

model ValorProduto {
  produto Produto @relation(fields: [produtoId], references: [id], onDelete: Restrict)

  id              String    @id @default(uuid())
  produtoId       String    @map("produto_id")
  espOdont        Boolean   @map("esp_odont")
  valorEmCentavos Int       @map("valor_em_cents")
  dtInicio        DateTime  @default(now()) @map("dt_inicio")
  dtFim           DateTime? @map("dt_fim")

  @@map("valor_produto")
}

//==prestação de serviços==//

model Servico {
  id String @id @default(uuid())

  itensServico ItemServico[]

  @@map("servico")
}

model ItemServico {
  produto         Produto                @relation(fields: [produtoId], references: [id], onDelete: Restrict)
  servico         Servico                @relation(fields: [servicoId], references: [id], onDelete: Restrict)
  etapaFabricacao EtapaFabricacaoProduto @relation(fields: [etapaId], references: [id], onDelete: SetNull)

  id         String @id @default(uuid())
  produtoId  String @map("produto_id")
  servicoId  String @map("servico_id")
  quantidade Int
  etapaId    String

  EtapaFabricacao   EtapaFabricacao? @relation(fields: [etapaFabricacaoId], references: [id])
  etapaFabricacaoId String?
  @@unique([produtoId, servicoId])
  @@map("item_servico")
}

model EtapaFabricacao {
  id        String  @id @default(uuid())
  nome      String  @unique
  descricao String?

  ItemServico            ItemServico[]
  EtapaFabricacaoProduto EtapaFabricacaoProduto[]

  @@map("etapa_fabricacao")
}

//======//CAIXA//======//
